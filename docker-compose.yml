services:
  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: npm run start:dev auth
    env_file:
      - ./apps/auth/.env
    depends_on:
      - postgres-users
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3000:3000'
  profiles:
    build:
      context: .
      dockerfile: ./apps/profile/Dockerfile
      target: development
    command: npm run start:dev profile
    env_file:
      - ./apps/profile/.env
    depends_on:
      - postgres-profiles
      - auth
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3001:3001'
  rabbitmq:
    image: rabbitmq
    ports:
      - '5672:5672'
  postgres-users:
    image: postgres:15
    environment:
      POSTGRES_DB: hw4_users
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      PG_DATA: /var/lib/postgresql/data
    ports:
      - "5001:5432"
    volumes:
      - ./docker_postgres_init.sql:/docker-entrypoint initdb.d/docker_postgres_init.sql
    restart: always
  postgres-profiles:
    image: postgres:15
    environment:
      POSTGRES_DB: hw4_profiles
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      PG_DATA: /var/lib/postgresql/data
    ports:
      - "5002:5432"
    restart: always
